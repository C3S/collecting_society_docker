// For copyright and license terms, see COPYRIGHT.rst (top level of repository)
// Repository: https://github.com/C3S/collecting_society_docker
{
    // IMPORTANT: If you get a "ECONNREFUSED" error when you debug one of the
    // configurations, make sure that the selected configuration corresponds
    // with the service set in .devcontainer.json, e.g. 'webgui' = 'Webgui Attach'
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Webgui Attach",
            "type": "python",
            "request": "attach",
            "connect": {
                "host": "localhost",
                "port": 52000
            },
        },
        {
            "name": "WebAPI Attach",
            "type": "python",
            "request": "attach",
            "port": 52001,
            "host": "localhost"
        },
        {
            "name": "Processing Attach",
            "type": "python",
            "request": "attach",
            "port": 52002,
            "host": "localhost"
        },
        // for debugging tests, put "test_web" as service in .devcontainer
        // and run for example: ./service-test web --keep --path src/collecting_society_web/collecting_society_web/tests/integration/web_user.py:TestWebUser
        // finally add these lines to your test:
        // import debugpy
        // debugpy.listen(address=("0.0.0.0", 52003))
        // debugpy.wait_for_client()
        // breakpoint()
        {
            "name": "Test Attach",
            "type": "python",
            "request": "attach",
            "port": 52003,
            "host": "localhost"
        },
        // the followint entry is for other cases, e.g.tests; insert this line:
        // import debugpy; debugpy.listen(address=("0.0.0.0", 52004)); debugpy.wait_for_client(); breakpoint()
        // don't forget to open the resp. port in the docker-compose.yml!
        {
            "name": "Casual Debugging Attach",
            "type": "python",
            "request": "attach",
            "port": 52004,
            "host": "localhost"
        },
        // use this to debug tryton wizards or to explore trytond internals:
        {
            "name": "ERPServer Attach",
            "type": "python",
            "request": "attach",
            "port": 52005,
            "host": "localhost",
            "subProcess": true
        },
        // the followint entry is for debugging demo data generation in
        // volumes/shared/data. To create all dependencies for a so called
        // 'leaf' dataset, for example 'sales' enter:
        // $ docker-compose run --rm  --service-ports erpserver bash
        // $ deploy-service
        // $ db-rebuild --dataset sales
        // which will create a Postgres template with a snapshot from before
        // sales is applied. To debug sales and apply it again to the stored
        // template use the --cache option (repeat step as long as you like):
        // $ db-rebuild --dataset sales --cache
        // Uncomment 'debugpy.wait_for_client()' in shared/data/main.py if you
        // want to debug the dataset launching pdvsd with "Demodata Attach".
        // (Note: If you are not able to connect using debugpy, try to restart
        // the VS Code container instance.)
        // If satisfied with sales, you may want to move on to a new dataset
        // that depends on sales, e.g. sales_statistics, you could enter:
        // db-copy --force collecting_society collecting_society_template
        // for more info: http://docs.c3s.cc/collecting_society/development/generated/collecting_society_docker_README.html#id29
        {
            "name": "Demodata Attach",
            "type": "python",
            "request": "attach",
            "port": 52006,
            "host": "localhost"
        },
        {
            "name": "JavaScript attach",
            "type": "firefox",
            "request": "attach",
            "url": "http://collecting_society.test/repertoire/creations/C0000000019/edit",
            "pathMappings": [
                {
                    "url": "http://collecting_society.test/static/portal",
                    "path": "${workspaceFolder}/src/portal_web/portal_web/static"
                }
            ]
        }
    ]
}
