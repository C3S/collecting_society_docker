#!/bin/bash
# For copyright and license terms, see COPYRIGHT.rst (top level of repository)
# Repository: https://github.com/C3S/collecting_society_docker
#
# Deploy script for echoprint

WAIT=30
REPOPATH="$WORKDIR/src/echoprint-server"
DATAPATH="/opt/echoprint-data"
INGESTPATH="$WORKDIR/data/fingerprints"
INGESTFILENAME="data.json"

TOKYOTYRANT_LOGFILE="/var/log/tokyotyrant.log"
TOKYOTYRANT_PIDFILE="/tmp/tokyotyrant.pid"
TOKYOTYRANT_DATAFILE="$DATAPATH/casket.tch"
TOKYOTYRANT_PORT=1978

SOLR_DATAPATH="$DATAPATH/solr"
SOLR_LOGPATH="$REPOPATH/solr/solr/logs"
SOLR_LOGFILE="/var/log/solr.log"
SOLR_PORT=8502

ECHOPRINT_LOGFILE="/var/log/echoprint.log"
ECHOPRINT_PORT=80

# tokyotyrant
echo "Tokyotyrant startup ..."
[ -f "$TOKYOTYRANT_PIDFILE" ] && rm $TOKYOTYRANT_PIDFILE
ttserver -port $TOKYOTYRANT_PORT -dmn -pid $TOKYOTYRANT_PIDFILE \
         -log $TOKYOTYRANT_LOGFILE -le $TOKYOTYRANT_DATAFILE#bnum=100000
timeout $WAIT bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' 127.0.0.1 $TOKYOTYRANT_PORT
if [ $? -ne 0 ]; then
    echo "Tokyotyrant startup error. Exiting."
    exit 1
fi
echo "Tokyotyrant started ..."

# solr
echo "Solr startup ..."
! [ -f "$SOLR_DATAPATH" ] && mkdir -p $SOLR_DATAPATH
! [ -f "$SOLR_LOGPATH" ] && mkdir -p $SOLR_LOGPATH
cd $REPOPATH/solr/solr/
java -Dsolr.data.dir=$SOLR_DATAPATH -Dsolr.solr.home=$REPOPATH/solr/solr/solr/ -Djava.awt.headless=true \
     -jar $REPOPATH/solr/solr/start.jar 2>&1 > $SOLR_LOGFILE &
cd $WORKDIR
timeout $WAIT bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' 127.0.0.1 $SOLR_PORT
if [ $? -ne 0 ]; then
    echo "Solr startup error. Exiting."
    exit 1
fi
echo "Solr started ..."

# echoprint
echo "Echoprint startup ..."
python $REPOPATH/API/api.py $ECHOPRINT_PORT 2>&1 > $ECHOPRINT_LOGFILE &
timeout $WAIT bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' 127.0.0.1 $ECHOPRINT_PORT
if [ $? -ne 0 ]; then
    echo "Echoprint startup error. Exiting."
    exit 1
fi
echo "Echoprint started."

# ingest
INGESTFILE=$INGESTPATH/$INGESTFILENAME
FLAGFILE=$DATAPATH/$INGESTFILENAME.ingested
if [ -f $INGESTFILE ] && [ ! -f $FLAGFILE ] && [ -f $TOKYOTYRANT_DATAFILE ]; then
    cd $REPOPATH/util
    python fastingest.py $INGESTFILE
    touch $FLAGFILE
    cd $WORKGDIR
fi

# logs
tail -f $TOKYOTYRANT_LOGFILE $SOLR_LOGFILE $ECHOPRINT_LOGFILE
