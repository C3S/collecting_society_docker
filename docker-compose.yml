# For copyright and license terms, see COPYRIGHT.rst (top level of repository)
# Repository: https://github.com/C3S/collecting_society_docker

version: '2.4'

networks:
  frontend:
  backend:

services:

  database:
    build:
      context: ./services/build
      target: database
      args: &buildargs
        ENVIRONMENT: ${ENVIRONMENT}
        WORKDIR: ${WORKDIR}
        DEBUGGER_WINPDB: ${DEBUGGER_WINPDB}
        DEBUGGER_PTVSD: ${DEBUGGER_PTVSD}
    healthcheck:
      test: /shared/healthcheck/database
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./volumes/shared:/shared
    networks:
      - backend
    env_file:
      - services/database.env
    environment:
      SERVICE: database

  erpserver:
    build:
      context: ./services/build
      target: erpserver
      args: *buildargs
    command: service-deploy
    healthcheck:
      test: /shared/healthcheck/erpserver
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    volumes:
      - ./volumes/shared:/shared
    depends_on:
      database:
        condition: service_healthy
      #fingerprint:
      #  condition: service_started
    env_file:
      - .env
      - services/erpserver.env
    environment:
      SERVICE: erpserver

  webserver:
    build:
      context: ./services/build
      target: webserver
      args: *buildargs
    healthcheck:
      test: /shared/healthcheck/webserver
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - frontend
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./volumes/shared:/shared
      - ./services/config/nginx.proxy.conf:/etc/nginx/conf.d/proxy.conf
    environment:
      SERVICE: webserver

  webapi:
    build:
      context: ./services/build
      target: webapi
      args: *buildargs
    command: service-deploy
    healthcheck:
      test: /shared/healthcheck/webapi
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - frontend
      - backend
    volumes:
      - ./volumes/shared:/shared
    depends_on:
      database:
        condition: service_healthy
      webserver:
        condition: service_started
    env_file:
      - .env
      - services/webapi.env
    environment:
      SERVICE: webapi
      VIRTUAL_HOST: ${VIRTUAL_HOST_WEBAPI}
      VIRTUAL_PORT: ${VIRTUAL_PORT_WEBAPI}

  webgui:
    build:
      context: ./services/build
      target: webgui
      args: *buildargs
    command: service-deploy
    healthcheck:
      test: /shared/healthcheck/webgui
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - frontend
      - backend
    volumes:
      - ./volumes/shared:/shared
    depends_on:
      webapi:
        condition: service_started
    env_file:
      - .env
      - services/webgui.env
    environment:
      SERVICE: webgui
      VIRTUAL_HOST: ${VIRTUAL_HOST_WEBGUI}
      VIRTUAL_PORT: ${VIRTUAL_PORT_WEBGUI}

  worker:
    build:
      context: ./services/build
      target: worker
      args: *buildargs
    cpu_percent: 50
    mem_limit: 500m
    command: service-deploy
    healthcheck:
      test: /shared/healthcheck/worker
      interval: 5m
      timeout: 5s
      retries: 5
    networks:
      - backend
    volumes:
      - ./volumes/shared:/shared
    depends_on:
      erpserver:
        condition: service_healthy
      fingerprint:
        condition: service_started
    env_file:
      - .env
      - services/worker.env
    environment:
      SERVICE: worker

  fingerprint:
    build:
      context: ./services/build
      target: fingerprint
      args: *buildargs
    command: service-deploy
    healthcheck:
      test: /shared/healthcheck/fingerprint
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    volumes:
      - ./volumes/shared:/shared
    env_file:
      - .env
    environment:
      SERVICE: fingerprint
